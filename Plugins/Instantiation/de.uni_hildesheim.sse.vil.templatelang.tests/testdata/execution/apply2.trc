f <- func(Integer)
f10 <- func10(Integer)
-> main(Configuration, FileArtifact) with (<config>, test.texts)
    seq <- {1, 2, 3, 4, 5, 6}
    -> loop(sequenceOf(Integer), FunCall) with ({1, 2, 3, 4, 5, 6}, func(Integer))
        for i {
            i <- 1
            -> func(Integer) with (1)
            -> func(Integer) with (1)
            i <- 2
            -> func(Integer) with (2)
            -> func(Integer) with (2)
            i <- 3
            -> func(Integer) with (3)
            -> func(Integer) with (3)
            i <- 4
            -> func(Integer) with (4)
            -> func(Integer) with (4)
            i <- 5
            -> func(Integer) with (5)
            -> func(Integer) with (5)
            i <- 6
            -> func(Integer) with (6)
            -> func(Integer) with (6)
        }
    -> impCall1(FunCallImp, Integer) with (func10(Integer), 1)
        -> func10(Integer) with (1)
            -> *(Integer, Integer) with (1, 10) = 10
        -> +(Integer, Integer) with (10, 1) = 11
    i <- 11
    -> impCall2(callOf Integer (Integer), Integer) with (func10(Integer), 2)
        -> func10(Integer) with (2)
            -> *(Integer, Integer) with (2, 10) = 20
        -> +(Integer, Integer) with (20, 2) = 22
    i <- 22
    -> impCall1(FunCallImp, Integer) with (func10(Integer), 3)
        -> func10(Integer) with (3)
            -> *(Integer, Integer) with (3, 10) = 30
        -> +(Integer, Integer) with (30, 1) = 31
    i <- 31