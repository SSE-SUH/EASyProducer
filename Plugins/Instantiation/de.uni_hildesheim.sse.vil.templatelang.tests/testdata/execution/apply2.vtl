import apply2Impl;

template apply2(Configuration config, FileArtifact target) {

    typedef FunCall callOf(Integer);

    FunCall f = func;
    FunCallImp f10 = func10;

    def func(Integer i) {
        '$i'
    }

    def Integer func10(Integer i) {
        i * 10;
    }

    def loop(sequenceOf(Integer) seq, FunCall d) {
        for (Integer i : seq) {
            d(i);
            f(i);
        }
    }

    def main(Configuration config, FileArtifact target) {
        sequenceOf(Integer) seq = {1, 2, 3, 4, 5, 6};
        loop(seq, func);
        Integer i = impCall1(func10, 1);
        'imp1 $i'
        i = impCall2(func10, 2);
        'imp2 $i'
        i = impCall1(f10, 3);
        'imp1 $i'
    }

}