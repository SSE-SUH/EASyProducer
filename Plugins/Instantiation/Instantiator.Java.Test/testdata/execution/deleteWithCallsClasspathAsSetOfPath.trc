-> main(Project, Configuration, Project) with (<project>, <config>, <project>)
    -> path(Project) with (<project>) = 
    newClasspath <- 
    -> path(Project) with (<project>) = 
    -> +(Path, String) with (, /thisIsATest) = thisIsATest
    secondClasspath <- thisIsATest
    classpath <- {, thisIsATest}
    -> setSettings(Project, ProjectSettings, Any) with (<project>, CLASSPATH, {, thisIsATest})
    f <- MethodClass.java
    -> defaultClass(JavaFileArtifact) with (MethodClass.java) = class 'MethodClass'
    cls <- class 'MethodClass'
    -> getName(JavaMethod) with (method 'method') = method
    -> ==(String, String) with (method, method) = true
    -> getName(JavaMethod) with (method 'methodCall') = methodCall
    -> ==(String, String) with (methodCall, method) = false
    -> getName(JavaMethod) with (method 'noMethodCall') = noMethodCall
    -> ==(String, String) with (noMethodCall, method) = false
    -> deleteMethodWithCalls(JavaClass, ExpressionEvaluator) with (class 'MethodClass', <evaluator>)