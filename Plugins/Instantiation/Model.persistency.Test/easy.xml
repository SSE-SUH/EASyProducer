<list>
  <de.uni__hildesheim.sse.model.varModel.Project>
    <name>PL_Bla</name>
    <isUnique>true</isUnique>
    <modelElements>
      <de.uni__hildesheim.sse.model.varModel.DecisionVariableDeclaration>
        <name>someNumbers</name>
        <isUnique>true</isUnique>
        <parent class="de.uni_hildesheim.sse.model.varModel.Project" reference="../../.."/>
        <type class="de.uni_hildesheim.sse.model.varModel.datatypes.Sequence">
          <name>Integer</name>
          <isUnique>true</isUnique>
          <parent class="de.uni_hildesheim.sse.model.varModel.Project" reference="../../../.."/>
          <singleton>
            <delegateName>Sequence</delegateName>
          </singleton>
          <type class="de.uni_hildesheim.sse.model.varModel.datatypes.DelegatingType">
            <delegateName>Integer</delegateName>
          </type>
        </type>
        <defaultValue class="de.uni_hildesheim.sse.model.cst.ConstantValue">
          <constant class="de.uni_hildesheim.sse.model.varModel.values.ContainerValue">
            <origin class="de.uni_hildesheim.sse.model.varModel.datatypes.Sequence" reference="../../../type"/>
            <nestedElements>
              <de.uni__hildesheim.sse.model.varModel.values.IntValue>
                <origin class="de.uni_hildesheim.sse.model.varModel.datatypes.DelegatingType" reference="../../../../../type/type"/>
                <value>1</value>
              </de.uni__hildesheim.sse.model.varModel.values.IntValue>
              <de.uni__hildesheim.sse.model.varModel.values.IntValue>
                <origin class="de.uni_hildesheim.sse.model.varModel.datatypes.DelegatingType" reference="../../../../../type/type"/>
                <value>2</value>
              </de.uni__hildesheim.sse.model.varModel.values.IntValue>
              <de.uni__hildesheim.sse.model.varModel.values.IntValue>
                <origin class="de.uni_hildesheim.sse.model.varModel.datatypes.DelegatingType" reference="../../../../../type/type"/>
                <value>3</value>
              </de.uni__hildesheim.sse.model.varModel.values.IntValue>
              <de.uni__hildesheim.sse.model.varModel.values.IntValue>
                <origin class="de.uni_hildesheim.sse.model.varModel.datatypes.DelegatingType" reference="../../../../../type/type"/>
                <value>4</value>
              </de.uni__hildesheim.sse.model.varModel.values.IntValue>
              <de.uni__hildesheim.sse.model.varModel.values.IntValue>
                <origin class="de.uni_hildesheim.sse.model.varModel.datatypes.DelegatingType" reference="../../../../../type/type"/>
                <value>5</value>
              </de.uni__hildesheim.sse.model.varModel.values.IntValue>
            </nestedElements>
          </constant>
        </defaultValue>
      </de.uni__hildesheim.sse.model.varModel.DecisionVariableDeclaration>
    </modelElements>
    <version>
      <segments>
        <int>0</int>
      </segments>
    </version>
    <imports/>
    <type>
      <project reference="../.."/>
      <operationList/>
    </type>
    <interfaceCount>0</interfaceCount>
    <names>
      <entry>
        <string>PL_Bla::someNumbers</string>
        <de.uni__hildesheim.sse.model.varModel.DecisionVariableDeclaration reference="../../../modelElements/de.uni__hildesheim.sse.model.varModel.DecisionVariableDeclaration"/>
      </entry>
      <entry>
        <string>someNumbers</string>
        <de.uni__hildesheim.sse.model.varModel.DecisionVariableDeclaration reference="../../../modelElements/de.uni__hildesheim.sse.model.varModel.DecisionVariableDeclaration"/>
      </entry>
    </names>
    <variable class="de.uni_hildesheim.sse.model.varModel.ProjectDecisionVariableDeclaration">
      <name>PL_Bla</name>
      <isUnique>true</isUnique>
      <parent class="de.uni_hildesheim.sse.model.varModel.Project" reference="../.."/>
      <type class="de.uni_hildesheim.sse.model.varModel.ProjectType" reference="../../type"/>
    </variable>
    <internalConstraints/>
  </de.uni__hildesheim.sse.model.varModel.Project>
  <de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.Script>
    <dirty>false</dirty>
    <imports class="de.uni_hildesheim.sse.easy_producer.instantiator.model.buildlangModel.Imports">
      <imports/>
      <vtlRestrictions/>
    </imports>
    <registry>
      <registry>de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.TypeRegistry@d898be</registry>
    </registry>
    <advices>
      <de.uni__hildesheim.sse.easy__producer.instantiator.model.common.Advice>
        <advice>PL_Bla</advice>
      </de.uni__hildesheim.sse.easy__producer.instantiator.model.common.Advice>
    </advices>
    <name>PL_Bla</name>
    <version>
      <segments>
        <int>0</int>
      </segments>
    </version>
    <parameters>
      <de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration>
        <name>source</name>
        <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor">
          <declaringType name="Project"/>
        </type>
        <isConstant>false</isConstant>
        <hasExplicitType>true</hasExplicitType>
      </de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration>
      <de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration>
        <name>config</name>
        <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor">
          <declaringType name="Configuration"/>
        </type>
        <isConstant>false</isConstant>
        <hasExplicitType>true</hasExplicitType>
      </de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration>
      <de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration>
        <name>target</name>
        <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor" reference="../../de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration/type"/>
        <isConstant>false</isConstant>
        <hasExplicitType>true</hasExplicitType>
      </de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration>
    </parameters>
    <declarations>
      <de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration>
        <name>OTHERPROJECTS</name>
        <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor">
          <declaringType name="Set" parameter0="Project"/>
        </type>
        <isConstant>false</isConstant>
        <hasExplicitType>true</hasExplicitType>
      </de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration>
      <de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration>
        <name>SCRIPTDIR</name>
        <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor">
          <declaringType name="String"/>
        </type>
        <isConstant>false</isConstant>
        <hasExplicitType>true</hasExplicitType>
      </de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration>
      <de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration>
        <name>somePairs</name>
        <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor">
          <declaringType name="Set" parameter0="Integer" parameter1="Integer"/>
        </type>
        <isConstant>false</isConstant>
        <expression class="de.uni_hildesheim.sse.easy_producer.instantiator.model.expressions.ContainerInitializerExpression">
          <initExpressions>
            <de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ContainerInitializerExpression>
              <initExpressions>
                <de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ConstantExpression>
                  <value class="int">1</value>
                  <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor">
                    <declaringType name="Integer"/>
                  </type>
                </de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ConstantExpression>
                <de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ConstantExpression>
                  <value class="int">2</value>
                  <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor" reference="../../de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ConstantExpression/type"/>
                </de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ConstantExpression>
              </initExpressions>
              <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor">
                <declaringType name="Sequence" parameter0="Integer"/>
              </type>
            </de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ContainerInitializerExpression>
            <de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ContainerInitializerExpression>
              <initExpressions>
                <de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ConstantExpression>
                  <value class="int">3</value>
                  <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor" reference="../../../../de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ContainerInitializerExpression/initExpressions/de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ConstantExpression/type"/>
                </de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ConstantExpression>
                <de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ConstantExpression>
                  <value class="int">4</value>
                  <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor" reference="../../../../de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ContainerInitializerExpression/initExpressions/de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ConstantExpression/type"/>
                </de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ConstantExpression>
              </initExpressions>
              <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor">
                <declaringType name="Sequence" parameter0="Integer"/>
              </type>
            </de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ContainerInitializerExpression>
          </initExpressions>
          <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor">
            <declaringType name="Set" parameter0="Integer" parameter1="Integer"/>
          </type>
        </expression>
        <hasExplicitType>true</hasExplicitType>
      </de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration>
      <de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration>
        <name>idTranslation</name>
        <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor">
          <declaringType name="Map" parameter0="String" parameter1="String"/>
        </type>
        <isConstant>false</isConstant>
        <expression class="de.uni_hildesheim.sse.easy_producer.instantiator.model.expressions.CallExpression">
          <name>convert</name>
          <arguments>
            <de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.CallArgument>
              <expr class="de.uni_hildesheim.sse.easy_producer.instantiator.model.expressions.ContainerInitializerExpression">
                <initExpressions>
                  <de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ContainerInitializerExpression>
                    <initExpressions>
                      <de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ConstantExpression>
                        <value class="string">nrOfProcessors</value>
                        <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor" reference="../../../../../../../../../../de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration[2]/type"/>
                      </de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ConstantExpression>
                      <de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ConstantExpression>
                        <value class="string">procCnt</value>
                        <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor" reference="../../../../../../../../../../de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration[2]/type"/>
                      </de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ConstantExpression>
                    </initExpressions>
                    <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor">
                      <declaringType name="Sequence" parameter0="String"/>
                    </type>
                  </de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ContainerInitializerExpression>
                  <de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ContainerInitializerExpression>
                    <initExpressions>
                      <de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ConstantExpression>
                        <value class="string">nrOfNodes</value>
                        <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor" reference="../../../../../../../../../../de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration[2]/type"/>
                      </de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ConstantExpression>
                      <de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ConstantExpression>
                        <value class="string">nodeCnt</value>
                        <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor" reference="../../../../../../../../../../de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration[2]/type"/>
                      </de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ConstantExpression>
                    </initExpressions>
                    <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor">
                      <declaringType name="Sequence" parameter0="String"/>
                    </type>
                  </de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.ContainerInitializerExpression>
                </initExpressions>
                <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor">
                  <declaringType name="Sequence" parameter0="String" parameter1="String"/>
                </type>
              </expr>
              <fixed>false</fixed>
            </de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.CallArgument>
          </arguments>
          <resolved class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionOperationDescriptor">
            <isConstructor>false</isConstructor>
            <opType>NORMAL</opType>
            <declaringType class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor" reference="../../../type"/>
            <returnType class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor">
              <declaringType name="Map"/>
            </returnType>
            <aliasType>NONE</aliasType>
            <parameter>
              <de.uni__hildesheim.sse.easy__producer.instantiator.model.vilTypes.ReflectionTypeDescriptor>
                <declaringType name="Sequence"/>
              </de.uni__hildesheim.sse.easy__producer.instantiator.model.vilTypes.ReflectionTypeDescriptor>
            </parameter>
            <acceptsNamedParameters>false</acceptsNamedParameters>
            <acceptsImplicitParameters>false</acceptsImplicitParameters>
            <isConversion>true</isConversion>
            <method>
              <class>de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.Map</class>
              <name>convert</name>
              <parameter-types>
                <class>de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.Sequence</class>
              </parameter-types>
            </method>
          </resolved>
          <callType>TRANSPARENT</callType>
          <dotRight>false</dotRight>
        </expression>
        <hasExplicitType>true</hasExplicitType>
      </de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration>
    </declarations>
    <rules>
      <de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.Rule>
        <name>main</name>
        <body>
          <de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration>
            <name>vars</name>
            <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor">
              <declaringType name="Sequence" parameter0="DecisionVariable"/>
            </type>
            <isConstant>false</isConstant>
            <expression class="de.uni_hildesheim.sse.easy_producer.instantiator.model.expressions.CallExpression">
              <name>variables</name>
              <arguments>
                <de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.CallArgument>
                  <expr class="de.uni_hildesheim.sse.easy_producer.instantiator.model.expressions.CallExpression">
                    <name>byName</name>
                    <arguments>
                      <de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.CallArgument>
                        <expr class="de.uni_hildesheim.sse.easy_producer.instantiator.model.expressions.VariableExpression">
                          <variable class="de.uni_hildesheim.sse.easy_producer.instantiator.model.buildlangModel.VariableDeclaration">
                            <name>config</name>
                            <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor" reference="../../../../../../../../../../../../../parameters/de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration[2]/type"/>
                            <isConstant>false</isConstant>
                            <hasExplicitType>true</hasExplicitType>
                          </variable>
                          <qualifiedName>config</qualifiedName>
                        </expr>
                        <fixed>false</fixed>
                      </de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.CallArgument>
                      <de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.CallArgument>
                        <expr class="de.uni_hildesheim.sse.easy_producer.instantiator.model.expressions.ConstantExpression">
                          <value class="string">someNumbers</value>
                          <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor" reference="../../../../../../../../../../../../declarations/de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration[2]/type"/>
                        </expr>
                        <fixed>false</fixed>
                      </de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.CallArgument>
                    </arguments>
                    <resolved class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionOperationDescriptor">
                      <name>byName</name>
                      <isConstructor>false</isConstructor>
                      <opType>NORMAL</opType>
                      <declaringType class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor" reference="../../../../../../../../../../parameters/de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration[2]/type"/>
                      <returnType class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor">
                        <declaringType name="DecisionVariable"/>
                      </returnType>
                      <aliasType>IMPLICIT</aliasType>
                      <parameter>
                        <de.uni__hildesheim.sse.easy__producer.instantiator.model.vilTypes.ReflectionTypeDescriptor reference="../../../../../../../../../../../parameters/de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration[2]/type"/>
                        <de.uni__hildesheim.sse.easy__producer.instantiator.model.vilTypes.ReflectionTypeDescriptor reference="../../../../../../../../../../../declarations/de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration[2]/type"/>
                      </parameter>
                      <acceptsNamedParameters>false</acceptsNamedParameters>
                      <acceptsImplicitParameters>false</acceptsImplicitParameters>
                      <isConversion>false</isConversion>
                      <method>
                        <class>de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.configuration.Configuration</class>
                        <name>getByName</name>
                        <parameter-types>
                          <class>java.lang.String</class>
                        </parameter-types>
                      </method>
                    </resolved>
                    <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor" reference="../resolved/returnType"/>
                    <callType>NORMAL</callType>
                    <dotRight>false</dotRight>
                  </expr>
                  <fixed>false</fixed>
                </de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.CallArgument>
              </arguments>
              <resolved class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionOperationDescriptor">
                <isConstructor>false</isConstructor>
                <opType>NORMAL</opType>
                <declaringType class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor" reference="../../arguments/de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.CallArgument/expr/resolved/returnType"/>
                <returnType class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor">
                  <declaringType name="Sequence" parameter0="DecisionVariable"/>
                </returnType>
                <aliasType>NONE</aliasType>
                <parameter>
                  <de.uni__hildesheim.sse.easy__producer.instantiator.model.vilTypes.ReflectionTypeDescriptor reference="../../../arguments/de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.CallArgument/expr/resolved/returnType"/>
                </parameter>
                <acceptsNamedParameters>false</acceptsNamedParameters>
                <acceptsImplicitParameters>false</acceptsImplicitParameters>
                <isConversion>false</isConversion>
                <method>
                  <class>de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.configuration.AbstractIvmlVariable</class>
                  <name>variables</name>
                  <parameter-types/>
                </method>
              </resolved>
              <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor" reference="../resolved/returnType"/>
              <callType>NORMAL</callType>
              <dotRight>false</dotRight>
            </expression>
            <hasExplicitType>true</hasExplicitType>
          </de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration>
          <de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.ExpressionStatement>
            <expression class="de.uni_hildesheim.sse.easy_producer.instantiator.model.buildlangModel.MapExpression">
              <variables>
                <de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration>
                  <name>a</name>
                  <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor" reference="../../../../../de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration/expression/arguments/de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.CallArgument/expr/resolved/returnType"/>
                  <isConstant>false</isConstant>
                  <hasExplicitType>true</hasExplicitType>
                </de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration>
              </variables>
              <expr class="de.uni_hildesheim.sse.easy_producer.instantiator.model.expressions.VariableExpression">
                <variable class="de.uni_hildesheim.sse.easy_producer.instantiator.model.buildlangModel.VariableDeclaration" reference="../../../../de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration"/>
                <qualifiedName>vars</qualifiedName>
              </expr>
              <givenTypes>
                <de.uni__hildesheim.sse.easy__producer.instantiator.model.vilTypes.ReflectionTypeDescriptor reference="../../../../de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration/expression/arguments/de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.CallArgument/expr/resolved/returnType"/>
              </givenTypes>
              <colon>false</colon>
            </expression>
          </de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.ExpressionStatement>
        </body>
        <parameters>
          <de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration>
            <name>source</name>
            <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor" reference="../../../../../parameters/de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration/type"/>
            <isConstant>false</isConstant>
            <hasExplicitType>true</hasExplicitType>
          </de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration>
          <de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration reference="../../body/de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration/expression/arguments/de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.CallArgument/expr/arguments/de.uni__hildesheim.sse.easy__producer.instantiator.model.expressions.CallArgument/expr/variable"/>
          <de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration>
            <name>target</name>
            <type class="de.uni_hildesheim.sse.easy_producer.instantiator.model.vilTypes.ReflectionTypeDescriptor" reference="../../../../../parameters/de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration/type"/>
            <isConstant>false</isConstant>
            <hasExplicitType>true</hasExplicitType>
          </de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.VariableDeclaration>
        </parameters>
        <isProtected>false</isProtected>
        <parent reference="../../.."/>
      </de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.Rule>
    </rules>
    <loadProperties/>
  </de.uni__hildesheim.sse.easy__producer.instantiator.model.buildlangModel.Script>
</list>