vilScript Reasoner (Project source, Configuration config, Project target) {

    version v0;
    
    main(Project source, Configuration config, Project target) = : {
    	if (!config.getByName("withLogs").booleanValue()) {
            // Collect all java files
            setOf(JavaFileArtifact) files = target.selectByType(JavaFileArtifact);
            String utils = "/var/lib/jenkins/jobs/VarModel/workspace/Utils/build/jar/de.uni_hildesheim.sse.Utils.jar";
            String model = "/var/lib/jenkins/jobs/VarModel/workspace/Model/build/jar/de.uni_hildesheim.sse.varModel.jar";
            String reasoner = "/var/lib/jenkins/jobs/ReasonerCore/workspace/ReasonerCore/build/jar/ReasonerCore.jar";
            // Set the classpath by adding each java file to the class path
            String newClasspath = target.path();
            String allFiles = "";
            map (JavaFileArtifact artifact = files) {
                allFiles + artifact.getPath() + ";";
            };
            setOf(String) classpath = {newClasspath, allFiles, utils, model, reasoner};
            target.setSettings(JavaSettings.CLASSPATH, classpath);
            map (JavaFileArtifact file = files) { 
                // Remove all logging outputs
                JavaClass cls = file.defaultClass();
                cls->deleteStatement(JavaCall c | (c.getType() == "EASyLogger" or c.getType() == "IAdditionalInformationLogger") and (c.getName() == "info" or c.getName() == "error") or c.getName() == "debug" or c.getName() == "exception" or c.getName() == "warn");
                // After removing all logging outputs clean up by removing the logger attribute
                JavaAttribute attribute = cls.getAttributeByName("LOGGER");
                if (null != attribute) {
                    attribute.delete();
                }
                // Remove imports after all logging references were removed
                setOf(JavaImport) imports = file.imports();
                map (JavaImport imp = imports) {
                    if (imp.getName() == "net.ssehub.easy.basics.logger.EASyLoggerFactory.EASyLogger" or imp.getName() == "net.ssehub.easy.basics.logger.EASyLoggerFactory") {
                        imp.delete();
                    }
                };
            };
        }
    }

}