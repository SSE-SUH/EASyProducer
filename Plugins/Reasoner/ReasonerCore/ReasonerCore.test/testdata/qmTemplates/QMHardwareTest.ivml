project HardwareTest {

    version v0;    
    
    enum MachineRole {Manager, Worker}; 
    
    compound Machine {       
        String name;        
        setOf(Integer) ports;
        MachineRole role;
        Constraint managerRole = role == MachineRole.Manager implies ports.isEmpty();
        // role == MachineRole.Manager implies ports.isEmpty();
        // workers without configured ports receive the default Storm ports
        Constraint workerRole = role == MachineRole.Worker and ports.isEmpty() implies ports == {6700, 6701, 6702, 6703};
    
    }
    
    setOf(Machine) machines;
    
    //machines->apply(Machine machine; sequenceOf(Integer) usedPorts = {} | usedPorts.union(machine.ports.asSequence())).hasDuplicates() == false;
    //machines->forAll(Machine m | m.role == MachineRole.Manager implies m.ports.isEmpty() == true);
    
    machines = {
        Machine{
            name="worker1",            
            ports={6700,6701,6702,6703},
            role = MachineRole.Worker
        },
        Machine{
            name="worker2",
            ports={6700,6701,6702,6703},
            role = MachineRole.Worker
        },
        Machine{
            name="worker3",
            ports={6700,6701,6702,6703},
            role = MachineRole.Worker
        },
        Machine{ 
            name="nexus",
            ports={6700,6701},
            role = MachineRole.Manager
        }
    }; 
    
}
