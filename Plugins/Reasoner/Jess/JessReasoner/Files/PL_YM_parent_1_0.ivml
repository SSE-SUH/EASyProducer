project PL_YM_parent_1 {

    version v0;
    enum DdsSchedulingAlgorithm {SIMPLE, DYNAMIC};
    enum JockeySchedulingType {SIMPLE, LOCATION};
    typedef Count Integer with (Count > 0);
    compound AbstractComponent {
    }

    compound DdsComponent refines AbstractComponent {
        Count docks;
        Count waitingBays;
        Boolean specialDocks;
        DdsSchedulingAlgorithm scheduling;
    }

    compound JockeyComponent refines AbstractComponent {
        Count jockeys;
        Boolean reassignments;
        JockeySchedulingType scheduling;
    }

    compound MobilityComponent refines AbstractComponent {
        Boolean gpsBasedDrivers;
        Boolean gpsBasedJockeys;
    }

    Boolean gpsBased;
    Boolean visualizationSupport;
    Boolean useJms;
    String jmsConnection;
    String queueName;
    JockeyComponent jockeyComponent;
    MobilityComponent mobilityComponent;
    DdsComponent ddsComponent;
    attribute Boolean metaInformation to jockeyComponent;
    attribute Boolean metaInformation to mobilityComponent;
    attribute Boolean metaInformation to ddsComponent;
    
    gpsBased = true;
    visualizationSupport = false;
    useJms = true;
    jmsConnection = "vm://localhost";
    queueName = "eu.indenica.vsp.Notification";
    jockeyComponent = {jockeys = 2, reassignments = false, scheduling = JockeySchedulingType.SIMPLE};
    ddsComponent = {docks = 5, waitingBays = 20, specialDocks = false, scheduling = DdsSchedulingAlgorithm.SIMPLE};
    //ddsComponent.waitingBays = 20;
    
    useJms implies not (size(jmsConnection) = 0);
    useJms implies not (size(queueName) = 0);
    gpsBased implies isDefined(mobilityComponent);
    isDefined(mobilityComponent) implies gpsBased;
    jockeyComponent.scheduling = JockeySchedulingType.LOCATION implies mobilityComponent.gpsBasedJockeys;
}
