project ReconfigurableHardware {

	import Basics;
	import Observables;
	annotate BindingTime bindingTime = BindingTime.compile to ReconfigurableHardware;
	compound HwNode {
		NonEmptyString name;
		assign (bindingTime = BindingTime.runtimeMon) to {
			Bandwidth bandwidth;
		}
		assign (bindingTime = BindingTime.runtimeEnact) to {
			IsAvailable available;
		}
	}

	compound MPCCNode refines HwNode {
		NonEmptyString host;
		PortInteger monitoringPort;
		PortInteger commandSendingPort;
		PortInteger commandReceivingPort;
		PositiveInteger numCPUs;
		PositiveInteger numDFEs;
		assign (bindingTime = BindingTime.runtimeMon) to {
			UsedMachines usedCPUs;
			UsedMachines usedDFEs;
			AvailableMachines availableCPUs;
			AvailableMachines availableDFEs;
		}
	}

	sequenceOf(refTo(HwNode)) clusters;
	Constraint namesUnique = size(clusters->collect(h|h.name)) == size(clusters);
	assign (bindingTime = BindingTime.runtimeMon) to {
		UsedMachines usedCPUs;
		UsedMachines usedDFEs;
		AvailableMachines availableCPUs;
		AvailableMachines availableDFEs;
	}
}
