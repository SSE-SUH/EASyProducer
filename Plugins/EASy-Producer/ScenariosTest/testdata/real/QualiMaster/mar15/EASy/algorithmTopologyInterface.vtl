template algorithmTopologyInterface(Configuration config, FileArtifact target) {
	
	def main(Configuration config, FileArtifact target){
		
		'package eu.qualimaster.algorithms.inf;'
		''
		'/**'
		' * Define the interface for creating topology-based algorithm.'
		'**/'
		'public interface ITopologyCreate {'
		
		'    /**'
		'     * Create the algorithm topology'
		'     * @param lastPipelineNodeName    the name of the last pipeline node to be linked with'
		'     * @param streamId    the stream identification'
		'     * @return the name of the ending node in this sub-topology'
		'    **/'
		'    public String createTopology(String lastPiplineNodeName, String streamId);'
		
		
		'}'
	}
}