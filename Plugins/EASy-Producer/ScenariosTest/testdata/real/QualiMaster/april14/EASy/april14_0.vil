vilScript april14 (Project source, Configuration config, Project target) {

    version v0;

    Path srcGen = "$target/src-gen";
    Path maxJ = "$target/hw-gen/EngineCode/src/qm";
    Path maxC = "$target/hw-gen/CPUCode";

    cleanup(Project target) = : {
    	srcGen.delete();
    }

    processElement(sequenceOf(DecisionVariable) output, Configuration config) = : {
        map(v = output) {
        	DecisionVariable elt = v.byName("destination");
        	String name = elt.varName().firstToUpperCase() + elt.type();
        	vilTemplateProcessor("storm" + elt.type(), config, "$srcGen/$name.java", elt=elt);
        	processElement(elt.byName("output").variables(), config);
        };
    }

    main(Project source, Configuration config, Project target) = : cleanup(target) {
        vilTemplateProcessor("stormPipeline", config, "$srcGen/Topology.java", pipeline=config.byName("pipeline"));
        map(v = config.byName("pipeline").byName("sources").variables()) {
        	String name = v.varName().firstToUpperCase() + v.type();
        	vilTemplateProcessor("storm" + v.type(), config, "$srcGen/$name.java", elt=v);
        	processElement(v.byName("output").variables(), config);
        };
        
		// call Java compiler on storm artifacts
		// package storm artifacts (JAR)        
        
        vilTemplateProcessor("maxKernel", config, "$maxJ/Pipeline.maxj", pipeline=config.byName("pipeline"));
        vilTemplateProcessor("maxManager", config, "$maxJ/PipelineManager.maxj", pipeline=config.byName("pipeline"));
        vilTemplateProcessor("maxHost", config, "$maxC/PipelineCpuCode.c", pipeline=config.byName("pipeline"));
        
        // call MAX Makefile
    }
    

}