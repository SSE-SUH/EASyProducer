template maxHost(Configuration config, FileArtifact target, DecisionVariable pipeline) {

    def main(Configuration config, FileArtifact target, DecisionVariable pipeline) {
        '#include "Maxfiles.h"'
        '#include <MaxSLiCInterface.h>'
        ''
        'int main(void)'
        '{'
        '    while(true) {'
        '        int32_ *inData;'
        '        int count = readDataFromNetwork(inData); // simplification, we need a loop or so'
        '        int32_ *outData;' 
        '        outData = malloc(count); // just for now'
        String param = "";
    	for (DecisionVariable r : pipeline.byName("sources").variables()) {
    		param = param + processElement(r, "");
    	}
    	if (param.length() > 0) {
    		param = param + ",";
    	}
        ''
        '        Pipeline($param inData, outData);'
        '        writeToNetwork(outData);'
        '    }'
        '}'
    }
    
    def String processElement(DecisionVariable elt, String param) {
    	if (elt.type() == "FamilyElement") {
    	    DecisionVariable family = elt.byName("family");
    	    for (DecisionVariable alg : family.byName("members").variables()) {
                if (alg.byName("hwType").stringValue() <> "NONE") {
	            	String familyName = elt.varName();
	            	String enabledSwitch = "${familyName}Enabled";
                	'int $enabledSwitch = readIntFromNetwork(); // just for now' | 8;
                    if (param.length() > 0) {
                	    param = param + ", ";
                    }
                    param = param + enabledSwitch;
                }
            }    		
			for (DecisionVariable flow : elt.byName("output").variables()) {
				param = processElement(flow.byName("destination"), param);
			}
		} else if (elt.type() == "Source") {
			// simplifying assumption - only family elements are suitable for hw
			for (DecisionVariable flow : elt.byName("output").variables()) {
				param = processElement(flow.byName("destination"), param);
			}
		} else if (elt.type() == "Sink") {
			// simplifying assumption - only family elements are suitable for hw
		}
		param; // force return
    }
    
}