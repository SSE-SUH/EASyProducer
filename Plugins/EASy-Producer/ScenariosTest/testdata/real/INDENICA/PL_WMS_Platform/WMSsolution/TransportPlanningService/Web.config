<?xml version="1.0"?>
<configuration>

  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
    <sectionGroup name="spring">
      <section name="context" type="Spring.Context.Support.ContextHandler, Spring.Core"/>
      <section name="objects" type="Spring.Context.Support.DefaultSectionHandler, Spring.Core"/>
    </sectionGroup>
    <sectionGroup name="common">
      <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging"/>
    </sectionGroup>
  </configSections>

  <!-- Spring Logging Configuration -->
  <common>
    <logging>
      <factoryAdapter type="Common.Logging.Simple.TraceLoggerFactoryAdapter, Common.Logging">
        <arg key="level" value="ERROR" />
        <arg key="showLogName" value="true" />
        <arg key="showDataTime" value="true" />
        <arg key="dateTimeFormat" value="yyyy/MM/dd HH:mm:ss:fff" />
        <!--
        <arg key="configType" value="FILE-WATCH" />
        <arg key="configFile" value="~/Config/Log4Net.xml" /> -->
      </factoryAdapter>
    </logging>
  </common>


  <!-- Log4NET Configuration -->
  <log4net>
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="C:\temp\log_TransportPlanning.txt" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="100KB" />
      <staticLogFileName value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
      </layout>
    </appender>
    <appender name="DebugAppender" type="log4net.Appender.DebugAppender" >
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%-5level - %message%newline" />
      </layout>
    </appender>
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%-5level - %message%newline" />
      </layout>
    </appender>
    <root>
      <level value="All" />
      <appender-ref ref="RollingFileAppender" />
      <appender-ref ref="DebugAppender" />
      <appender-ref ref="ConsoleAppender" />
    </root>
  </log4net>

  <!-- Spring Context Configuration -->
  <spring>

    <context>
      <resource uri="config://spring/objects"/>
    </context>

    <objects xmlns="http://www.springframework.net"
             xmlns:wcf="http://www.springframework.net/wcf">
      
      <!-- Service definition -->
      <object id="TransportPlanningService.TransportPlanningService" type="TransportPlanningService.TransportPlanningService, TransportPlanningService"
              singleton="false">
      </object>

      <!-- Service proxies -->

      <!-- StorageBinSearch -->
      <!-- <wcf:channelFactory id="storageBinSearchServiceObjectWSBinding"
       channelType="StorageBinSearchService.IStorageBinSearchService, StorageBinSearchService"
       endpointConfigurationName="WSHttpBinding_IStorageBinSearchService">
      </wcf:channelFactory>-->
      <!--returns WCFClientProxy<IStorageBinSearchService>.GetReusableFaultUnwrappingInstance("WSHttpBinding_ITransportPlanningService")-->
      <object id="storageBinSearchServiceObjectWSBinding"
            type="ACorns.WCF.DynamicClientProxy.WCFClientProxy&lt;TransportPlanningService.StorageBinSearchServiceReference.IStorageBinSearchService&gt;, ACorns.WCF.DynamicClientProxy"
            factory-method="GetReusableFaultUnwrappingInstance">
        <constructor-arg  value="WSHttpBinding_IStorageBinSearchService" />
      </object>

      <!-- MaterialMgt -->
      <!--<wcf:channelFactory id="materialMgtServiceObjectWSBinding"
        channelType="MaterialMgtService.IMaterialMgtService, MaterialMgtService"
        endpointConfigurationName="WSHttpBinding_IMaterialMgtService">
      </wcf:channelFactory>-->
      <!--returns WCFClientProxy<IMaterialMgtService>.GetReusableFaultUnwrappingInstance("WSHttpBinding_IMaterialMgtService")-->
      <object id="materialMgtServiceObjectWSBinding"
            type="ACorns.WCF.DynamicClientProxy.WCFClientProxy&lt;TransportPlanningService.MaterialMgtServiceReference.IMaterialMgtService&gt;, ACorns.WCF.DynamicClientProxy"
            factory-method="GetReusableFaultUnwrappingInstance">
        <constructor-arg  value="WSHttpBinding_IMaterialMgtService" />
      </object>
      
      
      <!-- is not working cause of DuplexChannel!
      <wcf:channelFactory id="generalTransportServiceObjectWSDualBinding"
        channelType="TransportPlanningService.GeneralTransportServiceReference.IGeneralTransportService, TransportPlanningService"
        endpointConfigurationName="WSDualHttpBinding_IGeneralTransportService">
      </wcf:channelFactory>  -->

      <!-- To create Channel using DuplexChannelFactory not ChannelFactory -->
      <!-- returns DuplexChannelFactory<TransportPlanningService.GeneralTransportServiceReference.IGeneralTransportService>("WSDualHttpBinding_IGeneralTransportService").CreateChannel() -->
      <!-- type="TransportPlanningService.GeneralTransportServiceReference.IGeneralTransportService, TransportPlanningService" -->
      <object id="generalTransportServiceObject"
          factory-object="aChannelFactory"
          factory-method="CreateChannel" />
      <object id="aChannelFactory"
              type="System.ServiceModel.DuplexChannelFactory&lt;TransportPlanningService.GeneralTransportServiceReference.IGeneralTransportService&gt;, System.ServiceModel">
        <constructor-arg  ref="callback" />
        <constructor-arg  value="WSDualHttpBinding_IGeneralTransportService" />
      </object>
      <object id="callback"
         type="TransportPlanningService.CallbackHandler, TransportPlanningService">
      </object>


    </objects>

  </spring>

  <system.web>
    <compilation debug="true" targetFramework="4.0" />
  </system.web>
  
  <system.serviceModel>
    <bindings>
      <wsDualHttpBinding>
        <binding name="WSDualHttpBinding_IGeneralTransportService" closeTimeout="00:01:00"
          openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
          bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard"
          maxBufferPoolSize="524288" maxReceivedMessageSize="65536" messageEncoding="Text"
          textEncoding="utf-8" useDefaultWebProxy="true">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
            maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <reliableSession ordered="true" inactivityTimeout="00:10:00" />
          <security mode="Message">
            <message clientCredentialType="Windows" negotiateServiceCredential="true"
              algorithmSuite="Default" />
          </security>
        </binding>
      </wsDualHttpBinding>
      <wsHttpBinding>
        <binding name="WSHttpBinding_IStorageBinSearchService" closeTimeout="00:01:00"
          openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
          bypassProxyOnLocal="false" transactionFlow="true" hostNameComparisonMode="StrongWildcard"
          maxBufferPoolSize="524288" maxReceivedMessageSize="65536" messageEncoding="Text"
          textEncoding="utf-8" useDefaultWebProxy="true" allowCookies="false">
          <security mode="None">
            <transport clientCredentialType="None" />
            <message establishSecurityContext="false" />
          </security>
        </binding>
        <binding name="WSHttpBinding_IMaterialMgtService" closeTimeout="00:01:00"
          openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
          bypassProxyOnLocal="false" transactionFlow="true" hostNameComparisonMode="StrongWildcard"
          maxBufferPoolSize="524288" maxReceivedMessageSize="65536" messageEncoding="Text"
          textEncoding="utf-8" useDefaultWebProxy="true" allowCookies="false">
          <security mode="None">
            <transport clientCredentialType="None" />
            <message establishSecurityContext="false" />
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>
    <client>
      <endpoint address="http://localhost:49285/StorageBinSearchService.svc"
        binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_IStorageBinSearchService"
        contract="StorageBinSearchServiceReference.IStorageBinSearchService"
        name="WSHttpBinding_IStorageBinSearchService" />
      <endpoint address="http://localhost:49839/MaterialMgtService.svc"
        binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_IMaterialMgtService"
        contract="MaterialMgtServiceReference.IMaterialMgtService" name="WSHttpBinding_IMaterialMgtService" />
      <endpoint address="http://localhost:49183/GeneralTransportService.svc"
        binding="wsDualHttpBinding" bindingConfiguration="WSDualHttpBinding_IGeneralTransportService"
        contract="GeneralTransportServiceReference.IGeneralTransportService"
        name="WSDualHttpBinding_IGeneralTransportService">
        <identity>
          <userPrincipalName value="Windows7-VM-1\oxana" />
        </identity>
      </endpoint>
    </client>   
    
    
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
          <serviceMetadata httpGetEnabled="true"/>
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="true"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>

    <!-- configure wsHttpBinding for transactions -->
    <services>
      <service name="TransportPlanningService.TransportPlanningService">
        <endpoint
          address="http://localhost:49486/TransportPlanningService.svc"
          binding="wsHttpBinding"
          bindingConfiguration="WSHttpBinding_IStorageBinSearchService"
          contract="TransportPlanningService.ITransportPlanningService" />
      </service>
    </services>

    
    <serviceHostingEnvironment multipleSiteBindingsEnabled="false" />
  </system.serviceModel>
  
 <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
  </system.webServer>
  
</configuration>
